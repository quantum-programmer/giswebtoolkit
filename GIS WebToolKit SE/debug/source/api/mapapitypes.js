/************************************ Нефедьева О. *** 09/08/19 ****
************************************* Соколова Т.О *** 30/01/19 ****
*                                                                  *
*              Copyright (c) PANORAMA Group 1991-2019              *
*                       All Rights Reserved                        *
*                                                                  *
********************************************************************
*                                                                  *
*                  Типы данных протокола API карты                 *
*                            GWTK SE                               *
*                                                                  *
*******************************************************************/
/**
 * Параметры карты
 * GWTK.MapParameters
 */
GWTK.MapParameters = {
    // Обязательные параметры
    "center": [],           // координаты центра [B, L]
    "tilematrixset": "GoogleMapsCompatible", // имя матрицы тайлов("GoogleMapsCompatible")
    // Допустимые параметры
    "layers": [],           // массив слоев (GWTK.LayerParameters), автоматически добавляемых в карту
    "url": "",              // адрес картографического сервиса GIS WebService SE ("http://gisserver.info/GISWebServiceSE/service.php")
    "minzoom": 2,           // минимальный уровень приближения
    "maxzoom": 17,          // максимальный уровень приближения
    "tilematrix": 15,       // текущий уровень приближения 
    "contenttree": [],      // описание дерева данных карты, массив элементов GWTK.TreeNodeParameter 
    "controls": ['*'],      // используемые компоненты карты (* - все)
    "maxbounds": [],        // максимальные габариты карты, геокоординаты юго-западного и северо-восточного углов карты, массив, [широта, долгота, широта, долгота]. По умолчанию используются габариты матрицы тай-лов
    "showsettings": false,  // Отображать элементы настройки прозрачности слоя в компоненте Состав карты.
    "locale": "ru-ru"       // язык интерфейса ("ru-ru" - русский)
};

/**
 * Параметры слоя карты
 * GWTK.LayerParameters  
 */
GWTK.LayerParameters = {
    "id": "",                       // уникальный идентификатор слоя в карте
    "alias": "",                    // название слоя
    "url": "",                      // адрес запроса данных ("http://gisserver.info/GISWebServiceSE/service.php? SERVICE=WMS&REQUEST=GetMap&VERSION=1.3.0&FORMAT=image/png&LAYERS=0001&BBOX=%bbox&HEIGHT=%h&WIDTH=%w&CRS=%crs&dt=%dt")
    "selectObject": 0,              // признак выбора объектов (0/1), (для wms и wmts слоев актуален при условии, что данные запрашиваются с сервиса GIS WebService SE)
    "hidden": 0,                    // скрыть слой при инициализации (1/0)
    "keyssearchbyname": [],         // массив ключей семантики для поиска в карте (["ObjName"] только для слоев сервиса GIS WebService SE)
    "legend": GWTK.LegendParameters,// параметры отображения легенды слоя GWTK.LegendParameters
    "opacityValue": 100,            // непрозрачность слоя (от 0 до 100)
    "showsettings": 0,              // отображать элементы настройки прозрачности слоя в компоненте Состав карты.

    // Только для пользовательских слоев (type = 'svg'/'geomarkers')
    "jsondata": GWTK.jsonSource,    // параметры источника geojson-объектов, используется, если type равен 'svg' или 'geomarkers'
    "type": "",                     // тип графического слоя, 'svg' стандартный графический слой (geoJSON, JSON), 'geomarkers' - слой кластеризуемых точечных знаков
    "updateparameters": GWTK.LayerUpdateParameters  // параметры динамисческого обновления графического слоя
};

/**
 * Параметры узла дерева данных карты
 * GWTK.TreeNodeParameter
 */
GWTK.TreeNodeParameter = {
    "id": "",               // идентификатор узла
    "text": "",             // название узла
    "clickable": true,      // признак вывода checkbox в узле
    "img": "icon-page",     // иконка узла
    "expanded": false,      // признак раскрытия узла
    "group": false,         // признак группы
    "remove": false,        // признак возможности удаления узла
    "save": false,          // признак возможности сохранения данных узла (только для пользовательских слоев)
    "nodes": []             // массив дочерних узлов типа GWTK.TreeNodeParameter
};

/**
 * Параметры легенды слоя
 * GWTK.LegendParameters
 */
GWTK.LegendParameters = {
    "legend": "",           // список типов объектов, условное обозначение которых выводится в легенде. Если значение списка равно «*», отображаются условные обозначения всех типов объектов в карте
    "shortlegend": 1        // признак отображения легенды  (без вложенности / в иерархическом виде)(1/0)
};

/**
 * Параметры динамическиго обновления графического слоя при смене масштаба, положения карты или фильтра
 * GWTK.LayerUpdateParameters
 */
GWTK.LayerUpdateParameters = {
    "bbox": 0,              // обновление при смене масштаба или габаритов карты 0/1
    "updatetime": 0,       // время обновления слоя в миллисекундах
    "fn_filter": null,      // функция формирования параметров фильтра для хапроса данных с сервера
    "fn_url": null          // функция формирования url для нового запроса: fn_url(bbox, fn_filter), где
    // bbox - массив габаритов [BT, LT, BB, LB]),
    // fn_filter - функция формирования параметров фильтра
};

/**
 * Параметры векторной графики svg
 * GWTK.DrawParameters
 */
GWTK.DrawParameters = {
    "stroke": "#e581f1",
    "stroke-width": "2px",
    "stroke-opacity": "0.75",
    "vector-effect": "non-scaling-stroke",
    "fill": "#e581f1",
    "background": "",
    "background-size": "auto auto",
    "fill-opacity": "0.3",
    "font-family": "Verdana",
    "font-size": "12px",
    "letter-spacing": "1",
    "startOffset": "2%",
    "marker": { "path": "M 2 9 a 5 5 0 0 0 17 0M 2 9 a 5 5 0 0 1 17 0", "refX": 8, "refY": 8 },
    "text": ""
};



/**
 *  РЕДАКТОР КАРТЫ
 */
/**
 * Параметры объектов карты, подлежащих редактированию
 * GWTK.MapEditorMapObjectsParameters
 */
GWTK.EditorMapObjectsParameters = {
    "code": "",        // код объекта (использовать для серии объектов)
    "key": "",         // ключ объекта (использовать для одиночных объектов)
    "semantics": []    // массив кодов семантик объекты, подлежащих редактированию
};

/**
 * Параметры данных редактора, подлежащих редактированию
 * GWTK.EditorDataParameters
 */
GWTK.EditorDataParameters = {
    "layerid" : "",              // идентификатор редактируемого слоя (xId слоя)
    "objects" : []               // массив объектов GWTK.EditorMapObjectsParameters
};

/**
 * Параметры инструмента Редактор карты
 * GWTK.EditorParameters
 */
GWTK.EditorParameters = {
    "maplayersid": ["", ""],         // Идентификаторы редактируемых слоев
    "functions": [],                 // функциональные возможности ("create", "edit", "delete" или *)
    "editingdata" : [],              // массив редактируемых данных GWTK.EditorDataParameters, при отсутствии - редактируются все объекты слоя
    "selectlayersid": [],            // Массив идентификаторов слоев (xId слоя), участвующих в выборе объектов для привязки и топологии.
                                     // При отсутствии параметра работа идет со всеми слоями, в которых параметр слоя selectObject = 1
    "transaction": "true",           // Отмена и восстановление серверных операций над объектами карты,
                                     // при значении «true» - появляются кнопки отмены операций на сервере.
    "info": ["semantics", "metrics"] // Признак наличия окна с детализированной информацией о создаваемом/редактируемом объекте карты:
                                     //  - отсутствие параметра или ‘*’ – детализация по атрибутам и геометрии объекта,
                                     //  - пустой массив – детализация отсутствует,
                                     //  - массив заданных значений, ограничения:  «semantics» - детализация атрибутов, «metrics» -  детализация геометрии
};

/**
 * Параметры типа пользовательского элемента управления
 * GWTK.UserControlType
 */
GWTK.UserControlType = {
    "name": "",                      // Уникальное имя компонента
    'alias':"",                      // Название компонента
    "options": ""                    // Имя переменной прототипа или объект прототипа
};

/**
 * Параметры фильтра объектов слоя карты
 * GWTK.LayerObjectFilter
 */
GWTK.LayerObjectFilter = {
    "idlist": "",                     // список идентификаторов объектов карты в виде gml.id через запятую
    "typenames": "",                  // список типов объектов (по xsd-схеме)
    "codelist": ""                    // список кодов объектов (по xsd-схеме)
};

/**
 * Параметры фильтра семантики слоя карты
 * GWTK.LayerSemanticFilter
 */
GWTK.LayerSemanticFilter = {
    "layerid": "",                    // идентификатор слоя (сервиса)
    "keys": [],                       // ключи семантик 
    "values": [],                     // значения семантик
    "operations": [],                 // операции для семантик ( =, !=, >, >=, <, <= )
    "logic": "OR",                    // логическая операция выражения, "OR" или "AND" (для всех семантик)
    "codeList": "",                   // список кодов объектов слоя
    "typeNames": ""                   // список типов объектов слоя
};

/**
 * Параметры семантики слоя карты
 * GWTK.LayerSemanticList
 */
GWTK.LayerSemanticList = {
    "layerid": "",                    // идентификатор слоя в карте (xid)
    "alias": "",                      // название слоя
    "keys": [],                       // ключи семантик слоя {"key":"", "name":""}
    "selected": ""                    // ключ выбранной семантики
};

GWTK.SemanticsSearchOptions = {
    "layerid": "",                     // идентификатор слоя сервиса (idlayer)
    "keys": [],                        // массив ключей семантик ( где искать ) 
    "values": []                       // массив значений семантик ( что искать )
};

/**
 * Параметры сообщения в протоколе событий карты
 * GWTK.ProtocolMessage
 */
GWTK.ProtocolMessage = {
    "text"            :"string",        // текст сообщения
    "display"         :'boolean', // показать всплывающее окно, необязательный параметр   
    "icon"            :"",         // имя изображения в окне, "error"/"warning" или ничего  
    "height"          :'number',   // высота всплывающего окна, пикселы
    "width"           :'number',   // ширина всплывающего окна, пикселы 
    "top"             :'number',   // положение всплывающего окна сверху, пикселы
    "left"            :'number',   // положение всплывающего окна слева, пикселы
    "classname"       :"string",   // имя класса css окна
    "duration"        :'number'    // время отображения всплывающего окна, миллисекунд
};